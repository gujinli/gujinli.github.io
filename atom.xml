<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gujinli.github.io</id>
    <title>瑾离不是锦鲤的小窝</title>
    <updated>2022-04-18T03:53:01.554Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gujinli.github.io"/>
    <link rel="self" href="https://gujinli.github.io/atom.xml"/>
    <subtitle>ACM打铁/异地恋中——</subtitle>
    <logo>https://gujinli.github.io/images/avatar.png</logo>
    <icon>https://gujinli.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 瑾离不是锦鲤的小窝</rights>
    <entry>
        <title type="html"><![CDATA[ICPC2021南京 部分题解]]></title>
        <id>https://gujinli.github.io/post/icpc2021-nan-jing-bu-fen-ti-jie/</id>
        <link href="https://gujinli.github.io/post/icpc2021-nan-jing-bu-fen-ti-jie/">
        </link>
        <updated>2022-04-18T03:52:33.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>场上过了5题。自己就写了一道签到和树p，罚时过高。第一次icpc遗憾铜牌</p>
</blockquote>
<h1 id="a-oops-its-yesterday-twice-more"><a href="https://codeforces.com/gym/103470/problem/A">A. Oops, It's Yesterday Twice More</a>（签到题）</h1>
<p><strong>题意：</strong> 先判断离哪个角近走到角上，然后在走到(x, y)。</p>
<p><strong>Solution：</strong>  签到水题</p>
<h1 id="c-klee-in-solitary-confinement"><a href="https://codeforces.com/gym/103470/problem/C">C. Klee in Solitary Confinement</a></h1>
<p><strong>题意：</strong> 长度为n的序列，选择一段区间加上k。使整个序列众数的数量最大。</p>
<p><strong>Solution：</strong> 对每个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">a_i-k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 一起考虑即可。把这两个丢进一个vector里</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">sum[i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 表示 前 i 个中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的个数， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">sum[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 表示前 i 个中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">a_i-k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的个数。</p>
<p>对一段<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo separator="true">,</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">l,r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 答案即为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>m</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>−</mo><mo>(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>r</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>)</mo><mo>+</mo><mo>(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>r</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">sum[m][0]-(sum[r][0]-sum[l-1][0])+(sum[r][1]-sum[l-1][1])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span></p>
<p>移项得：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>m</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>+</mo><mo>(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>r</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>r</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>)</mo><mo>+</mo><mo>(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo>[</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">sum[m][0]+(sum[r][1]-sum[r][0])+(sum[l-1][0]-sum[l-1][1])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span></p>
<p>这样就能线性解决了，复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>2</mn><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(2n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p>
<p>特别的对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的情况进行特判。</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
#define int ll
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define vpii vector&lt;pi&gt;
#define il inline
#define ri register
#define all(a) a.begin(), a.end()
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
#define debug puts(&quot;------------------------&quot;)
#define lowbit(x) (x&amp;-x)
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
void Read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
int  read() {int a=0,c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();return a*=b; }
void write(int x) {if(x&gt;9)write(x/10);putchar('0'+x%10);}
void W(int x) {if(x&lt;0){putchar('-'),x=-x;}write(x);}
#define LOCAL
using namespace std;
const int maxn = 4000005;
/**/
int n, k, a[maxn], sum[maxn][2], ans;
vi v[maxn];
/**/
signed main()
{
	#if ONLINE_JUDGE
	#else
	// fr(&quot;test.in&quot;);
	// fo(&quot;test.out&quot;);
	#endif
	n = read(); k = read();
	for(int i = 1; i &lt;= n; i++)
	{
		a[i] = read();
		a[i] += 2000000;
		v[a[i]].pb(a[i]);
		v[a[i] + k].pb(a[i]);
		ans = max(ans, max((int)v[a[i]].size(), (int)v[a[i] + k].size()));
	}
	if(!k)
	{
		cout &lt;&lt; ans / 2;
		return 0;
	}
	ans = 0;
	for(int i = 0; i &lt;= 4000000; i++)
	{
		int m = v[i].size();
		for(int j = 0; j &lt; m; j++)
		{
			sum[j + 1][0] = sum[j][0] + (v[i][j] == i);
			sum[j + 1][1] = sum[j][1] + (v[i][j] != i);
		}
		int tmp = 0;
		ans = max(ans, sum[m][0]);
		for(int j = 1; j &lt;= m; j++)
		{
			tmp = max(tmp, sum[j - 1][0] - sum[j - 1][1]);
			ans = max(ans, sum[m][0] + sum[j][1] - sum[j][0] + tmp);
		}
	}
	cout &lt;&lt; ans &lt;&lt; '\n';
	return 0;
}
</code></pre>
<h1 id="m-windblume-festival"><a href="https://codeforces.com/gym/103470/problem/M">M. Windblume Festival</a></h1>
<p><strong>题意：</strong> 长度为n的序列，每次可以选择一个 i，然后将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 合并为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">a_i-a{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span></span>。求最后的一个数最大是多少</p>
<p><strong>Solution：</strong> 对有正有负，只有正，只有负三种情况分类讨论一下即可。</p>
<h1 id="h-crystalfly"><a href="https://codeforces.com/gym/103470/problem/H">H. Crystalfly</a></h1>
<p><strong>题意：</strong> 一个树形dp。自己写的，就不补了）</p>
<p><strong>Solution：</strong> 考虑清楚细节就可以了。场上脑子一团浆糊简直）</p>
<h1 id="d-paimon-sorting"><a href="https://codeforces.com/gym/103470/problem/D">D. Paimon Sorting</a></h1>
<p><strong>题意：</strong></p>
<p><strong>Solution：</strong></p>
<h1 id="j-xingqius-joke"><a href="https://codeforces.com/gym/103470/problem/J">J. Xingqiu's Joke</a></h1>
<p><strong>题意：</strong></p>
<p><strong>Solution：</strong></p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
#define int ll
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define vpii vector&lt;pi&gt;
#define il inline
#define ri register
#define all(a) a.begin(), a.end()
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
#define debug puts(&quot;------------------------&quot;)
#define lowbit(x) (x&amp;-x)
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
void Read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
int  read() {int a=0,c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();return a*=b; }
void write(int x) {if(x&gt;9)write(x/10);putchar('0'+x%10);}
void W(int x) {if(x&lt;0){putchar('-'),x=-x;}write(x);}
#define LOCAL
using namespace std;
const int maxn = 200005;
/**/
vi v;
unordered_map&lt;ll,int&gt;f;
/**/
il ll get(int x, int y) { return x * 1e9 + y; }
int dfs(int a, int c)
{
	// cout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; c &lt;&lt; '\n';
	if(a == 0) return 0x3f3f3f3f;
	if(a == 1) return 0;
	if(c == 1) return a - 1;
	if(f[get(a,c)]) return f[get(a,c)];
	int res = a - 1;
	for(auto p : v)
	{
		if(c % p == 0)
		{
			int tmp = a % p;
			res = min({res, tmp + 1 + dfs(a / p, c / p) , p - tmp + 1 + dfs(a / p + 1, c / p)});
		}
	}
	// cout &lt;&lt; a &lt;&lt; ' ' &lt;&lt; c &lt;&lt; ' ' &lt;&lt; res &lt;&lt; '\n';
	return f[get(a,c)] = res;
}
signed main()
{
	#if ONLINE_JUDGE
	#else
	fr(&quot;test.in&quot;);
	// fo(&quot;test.out&quot;);
	#endif
	int T = read();
	while(T--)
	{
		f.clear();
		v.clear();
		int a, b, c;
		a = read(); b = read();
		if(a &gt; b) swap(a, b);
		c = b - a;
		for(int i = 2; i * i &lt;= c; i++)
		{
			if(c % i == 0)
			{
				v.pb(i);
				while(c % i == 0) c /= i;
			}
		}
		if(c != 1) v.pb(c);
		// for(auto i : v) cout &lt;&lt; &quot;prime = &quot; &lt;&lt; i &lt;&lt; '\n';
		// cout &lt;&lt; v.size() &lt;&lt; '\n';
		cout &lt;&lt; dfs(a, b - a) &lt;&lt; '\n';
		// return 0;
		// debug;
	}
	return 0;
}
</code></pre>
<h1 id="lsecret-of-tianqiu-valley"><a href="https://codeforces.com/gym/103470/problem/L">L.Secret of Tianqiu Valley</a></h1>
<p><strong>题意：</strong></p>
<p><strong>Solution：</strong></p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define vpii vector&lt;pi&gt;
#define il inline
#define ri register
#define all(a) a.begin(), a.end()
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
#define debug puts(&quot;------------------------&quot;)
#define lowbit(x) (x&amp;-x)
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
void Read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
int  read() {int a=0,c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();return a*=b; }
void write(int x) {if(x&gt;9)write(x/10);putchar('0'+x%10);}
void W(int x) {if(x&lt;0){putchar('-'),x=-x;}write(x);}
#define LOCAL
using namespace std;
const int maxn = 200005;
/**/
int n, a[maxn], d[maxn];
vi ans;
/**/
il int lst(int x) { return x == 1 ? n : x - 1; }
il int nxt(int x) { return x == n ? 1 : x + 1; }
il void change(int x)
{
	d[x] ^= 1;
	a[x] ^= 1; a[lst(x)] ^= 1; a[nxt(x)] ^= 1;
	ans.pb(x);
}
il void work1(int x)
{
	if(!a[x] &amp;&amp; d[x])
	{
		change(x);
		work1(nxt(x));
		work1(lst(x));
	}
}
il void work2(int x) // 1 2 1 3
{
	if(!a[x] &amp;&amp; !d[x])
	{
		change(x);
		if(d[nxt(x)])
		{
			change(nxt(x)); change(x); change(nxt(nxt(x)));
			work2(nxt(nxt(nxt(x))));
		}
		else
		{
			change(lst(x));	change(x); change(lst(lst(x)));
			work2(lst(lst(lst(x))));
		}
	}
}
il bool check()
{
	for(int i = 3; i &lt;= n; i++)
	{
		d[i] = d[i - 1] ^ d[i - 2] ^ a[i - 1] ^ 1;
	}
	for(int i = 1; i &lt;= n; i++)
	{
		if((a[i] ^ 1) != (d[lst(i)] ^ d[nxt(i)] ^ d[i])) return 0;
	}
	for(int i = 1; i &lt;= n; i++) work1(i);
	for(int i = 1; i &lt;= n; i++) work2(i);

	return 1;
}
il void solve()
{
	ans.clear();
	n = read();
	for(int i = 1; i &lt;= n; i++) scanf(&quot;%1d&quot;, &amp;a[i]);
	for(int i = 0; i &lt;= 1; i++)
	for(int j = 0; j &lt;= 1; j++)
	{
		d[1] = i, d[2] = j;
		if(check()) break;
	}
	cout &lt;&lt; ans.size() &lt;&lt; '\n';
	for(auto i : ans)
	{
		cout &lt;&lt; i &lt;&lt; ' ';
	}
	puts(&quot;&quot;);
}
signed main()
{
	#if ONLINE_JUDGE
	#else
	fr(&quot;test.in&quot;);
	// fo(&quot;test.out&quot;);
	#endif
	int T = read();
	while(T--)
	{
		solve();
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[比赛经验总结]]></title>
        <id>https://gujinli.github.io/post/bi-sai-jing-yan-zong-jie/</id>
        <link href="https://gujinli.github.io/post/bi-sai-jing-yan-zong-jie/">
        </link>
        <updated>2022-04-18T03:45:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="赛场">赛场：</h1>
<ul>
<li>
<p>卡思路 = <strong>跳题</strong></p>
</li>
<li>
<p><strong>卡代码</strong> = 分屏 / 打印debug</p>
</li>
<li>
<p>前期不要死磕，换题冷静，中后期和队友一起讨论，中后期卡题和队友合力解决，打印代码两人旁边讨论，第三人上机</p>
</li>
<li>
<p>前期题/过的人数较多的题，写不出来果断放一边不要影响心态</p>
</li>
<li>
<p>第三人专门配合另外两人，帮忙看着漏洞，构造特殊数据，考虑边界</p>
</li>
<li>
<p>debug思路：</p>
<p>自己总结，从前往后一点点调。一旦发生<strong>非思路</strong>上的问题才需要debug，理清楚每一部分在干什么。</p>
<p><strong>不要急。要自信。</strong></p>
<p>对着代码问自己这一部分是在处理什么，处理方法上是否存在问题/漏洞</p>
<p>哪里不行调那哪里，能眼瞅绝对不输出。</p>
<p><strong>绝对的冷静，自信以及精密</strong></p>
</li>
<li>
<p>作为队长需要掌握好节奏，谁心态崩队长也不能崩。</p>
<p>队友之间有分歧，队长需要及时调整</p>
<p>起主要作用做好开题的顺序和决策</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[线段树学习笔记]]></title>
        <id>https://gujinli.github.io/post/xian-duan-shu-xue-xi-bi-ji/</id>
        <link href="https://gujinli.github.io/post/xian-duan-shu-xue-xi-bi-ji/">
        </link>
        <updated>2022-04-18T03:45:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="结构">结构：</h3>
<ul>
<li>
<p>lazy_tag：</p>
<p>为了方便（统一），区间修改只改tag，在pushdown时分成三步：</p>
<ul>
<li>计算当前节点信息</li>
<li>下传tag</li>
<li>清空当前节点tag</li>
</ul>
<p>另外，在查询和修改操作最前面pushdown。</p>
<p><strong>pushup时也要先pushdown子节点，保证子节点信息正确</strong></p>
</li>
<li>
<p><strong>关于lazytag的使用：2022/3/22改</strong></p>
<p>看情况。有时其实仍然是修改时保证父节点信息正确，有tag只表示下传并计算出子节点值更好。</p>
</li>
</ul>
<h3 id="应用">应用：</h3>
<ul>
<li>
<p>加乘tag的下传计算 -&gt; 算清楚就好了</p>
</li>
<li>
<p>区间加等差数列 -&gt; 维护差分数组，前缀和单点查询</p>
</li>
<li>
<p>区间加平方数列 -&gt; 高阶前缀和求</p>
</li>
<li>
<p><strong>维护区间mex：<a href="https://ac.nowcoder.com/acm/contest/19684/F">F-little w and Discretization_牛客竞赛数据结构专题班树状数组、线段树练习题 (nowcoder.com)</a></strong></p>
<p>叶节点维护 ：数字 <strong>i</strong> 最后一次出现的位置（没出现过自然就是0）</p>
<p>区间维护：一段区间最左边位置的点（即叶节点的最小值）</p>
<p>对查询的区间离线，按 右端点 从小到大排序。</p>
<p>query(pos) 表示查询第一个权值小于pos的叶节点编号，</p>
<p>一个区间 <strong>[l,r]</strong> 的答案就是 query(q[i].l)，在查询一段区间时，如果左子树权值 &gt;= pos，就说明 l~mid 的所有值全部在 pos 之后出现了，不可能成为mex值，因此就到右边去找。否则就可以在左子树中寻找。</p>
</li>
<li>
<p><strong>维护区间历史最大值：（带区间修改+赋值）</strong><a href="https://www.luogu.com.cn/problem/solution/P4314?page=1">P4314 CPU 监控 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)</a></p>
<p>对于这种问题，由于我们的lazytag会在pushdown时进行修改，所以会导致难以将正确的<strong>历史最值</strong>更新到叶节点</p>
<p>我们不对lazytag进行合并操作，想象成 一段操作序列（队列）。每次pushdown就把整段序列添加到左右儿子的队列尾，并清空当前节点的队列。</p>
<p>显然这样可以根据队列的信息，计算出在哪个节点达到了<strong>最大值</strong>，即历史最值。</p>
<p>但同时这样是不可行的，于是我们寻找一种方法：<strong>记录（维护）一个队列的标记对当前节点的影响</strong></p>
<p>即额外维护两个类似<strong>tag</strong>的信息：历史区间最大加和，历史区间最大赋值</p>
<p>这样的话，在pushdown中进行详细的分类讨论，就可以解决这个问题。</p>
</li>
<li>
<p><strong>线段树合并分裂应用于区间排序问题：</strong> <a href="https://www.luogu.com.cn/problem/P2824">P2824 [HEOI2016/TJOI2016]排序</a></p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[动态规划学习笔记]]></title>
        <id>https://gujinli.github.io/post/dp-lian-xi-ji-lu/</id>
        <link href="https://gujinli.github.io/post/dp-lian-xi-ji-lu/">
        </link>
        <updated>2022-01-03T06:50:19.000Z</updated>
        <content type="html"><![CDATA[<h1 id="p2466-sdoi2008-sue-的小球"><a href="https://www.luogu.com.cn/problem/P2466">P2466 [SDOI2008] Sue 的小球</a></h1>
<blockquote>
<p>n个小球从二维的天空下落。你在(x0,0)处且只能横向移动，速度1单位距离/秒。每个小球从(xi, yi)处以vi速度下落。</p>
<p>每个小球接到的价值为 当前的y /  1000，（<strong>可能为负值</strong>）</p>
<p>求接住每个小球的最大价值和。（<strong>可能为负</strong>）</p>
</blockquote>
<p><strong>区间dp。</strong></p>
<blockquote>
<p>引自论文：</p>
<p>在常规动态规划问题中，我们面临当前状态时**“行动”** 造成的花费往往与这个状态是 <strong>同时计算</strong> 的 。</p>
<p>本题中，当前“行动”费用的一部分需要在之前决策时被计算并以状态的形式对当前状态造成影响。造成这 一独特的计算的原因就是当前的决策会对未来的“行动”费用造成影响。这类问题 构造方程往往比较困难，需要仔细分析原题，找到矛盾所在。</p>
<p>那么简单来说就是<strong>现在的决策内容会对之后的计算价值产生影响</strong>。</p>
</blockquote>
<p>该题中，射击的得分与当前的时刻相关。但当前的时刻是不能由上一个状态表示出来。</p>
<p>矛盾在于<strong>曾经花费的时间对当前状态造成了影响</strong>。</p>
<p>怎么办？我们在每次移动（决策）时，将该决策对未来的影响计算出来就可以了。也就是计算出<strong>决策使未来减少的得分</strong>。</p>
<p>故可以定义<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f[i][j][1/0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>表示接住 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[i,j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>的小球且最后停在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>时 <strong>损失掉的价值</strong>。（其实也可以定义成总价值，区别不大）</p>
<p><a href="https://www.luogu.com.cn/record/66026084">代码</a></p>
<h1 id="p3177-haoi2015树上染色"><a href="https://www.luogu.com.cn/problem/P3177">P3177 [HAOI2015]树上染色</a></h1>
<blockquote>
<p>一颗点数为n 的树，选择k个点染成黑色，其余点染成白色。</p>
<p>收益为：黑点两两之间的距离 + 白点两两之间的距离。求最大收益</p>
</blockquote>
<p>每一条边的贡献就是这条边两边的（黑点数相乘 + 白点数相乘）* 边权，</p>
<p>因此定义 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">f[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示以i为根的子树中，选了j个黑点对答案的贡献是多少。</p>
<p>转移时针对一条边转移，枚举这个子树中选的黑点数，做树形背包dp即可。</p>
<p><a href="https://www.luogu.com.cn/record/66094849">代码</a></p>
<h1 id="p4516-jsoi2018潜入行动"><a href="https://www.luogu.com.cn/problem/P4516">P4516 [JSOI2018]潜入行动</a></h1>
<blockquote>
<p>n个点的树放m个监听设备。每个设备能监听所有相邻节点但不能监听自身。</p>
<p>求恰好放完m个设备，保证每个节点都能被监听到的方案数</p>
</blockquote>
<p>树形背包的经典转移：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>c</mi><mi>o</mi><mi>m</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi>e</mi><mo>(</mo><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo><mo separator="true">,</mo><mi>f</mi><mo>[</mo><mi>v</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">f[u][i + j] = combine(f[u][i], f[v][j])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span></p>
<p>设状态为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>0</mn><mi mathvariant="normal">/</mi><mn>1</mn><mo>]</mo><mo>[</mo><mn>0</mn><mi mathvariant="normal">/</mi><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f[u][j][0/1][0/1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mord">/</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mord">/</span><span class="mord">1</span><span class="mclose">]</span></span></span></span> ，以u为根的子树，选了j个点，u选/不选，u是否被覆盖。</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>=</mo><mo>∑</mo><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>∗</mo><mi>f</mi><mo>[</mo><mi>v</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f[u][i + j][0][0] = ∑ f[u][i][0][0] * f[v][j][0][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>=</mo><mo>∑</mo><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>∗</mo><mi>f</mi><mo>[</mo><mi>v</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f[u][i + j][1][0] = ∑ f[u][i][1][0] * f[v][j][0][1/0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>=</mo><mo>∑</mo><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>∗</mo><mi>f</mi><mo>[</mo><mi>v</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>+</mo><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>∗</mo><mi>f</mi><mo>[</mo><mi>v</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f[u][i + j][0][1] = ∑ f[u][i][0][1] * f[v][j][1/0][1] + f[u][i][0][0] * f[v][j][1][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>=</mo><mo>∑</mo><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>∗</mo><mi>f</mi><mo>[</mo><mi>v</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo>]</mo><mo>[</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo>]</mo><mo>+</mo><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>∗</mo><mi>f</mi><mo>[</mo><mi>v</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>1</mn><mo>]</mo><mo>[</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">f[u][i + j][1][1] = ∑ f[u][i][1][1] * f[v][j][1/0][1/0] + f[u][i][1][0] * f[v][j][1][1/0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mclose">]</span></span></span></span></li>
</ul>
<p>然后因为是计数问题，我们无法排除 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mi>i</mi><mo>+</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i=i+j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 的情况。故对于每个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">f[u][i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span>，我们开一个新数组存储并将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>[</mo><mi>u</mi><mo>]</mo><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">f[u][i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span>清零，然后采取刷表法更新答案。</p>
<p>注意该题中 long long 开不下这么大的数组。所以用int开，中间变量用long long更新。注意细节处不要爆long long (T T)</p>
<p><a href="">代码</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cf1622D 组合数/容斥]]></title>
        <id>https://gujinli.github.io/post/cf1622d-zu-he-shu-rong-chi/</id>
        <link href="https://gujinli.github.io/post/cf1622d-zu-he-shu-rong-chi/">
        </link>
        <updated>2021-12-28T08:43:56.000Z</updated>
        <content type="html"><![CDATA[<h1 id="d-shuffle"><a href="https://codeforces.com/contest/1622/problem/D">D - Shuffle</a></h1>
<blockquote>
<p>长度为n的01串，可以选择一段恰好含m个1的子串shuffle（重排），求一共能得到几个不一样的串</p>
</blockquote>
<p>首先这种问题要么dp要么组合数，dp无解于是先n^2傻瓜预处理一个组合数。</p>
<p>考虑以 i 为左端点的最大合法区间，i点只有1和0两种情况</p>
<p>我们采取容斥的思想，计算到 以 i 为左端点时，我们只计算 i 取反的情况。因为 i 相同的情况显然会在 &gt; i 的区间中计算到。</p>
<p>那么有个疑问点，我们只考虑 区间中恰好含 1 数量为 m 的时候会出现一个问题：</p>
<ul>
<li>
<p>例如： 1100 (m==2) 。我们先计算了 i = 1, j = 4。让 i取反为 0， 则后面三位可以填2个1，C(3,2) = 3。</p>
<p>但是 i 为 1 的情况怎么计算呢？我们对于 k(当前1的数量) &lt; m 且 j 已经到达边界的区间同样这样考虑即可。</p>
<p>i = 2, j = 4 时令 第2位取反为0，后面两位填1个1， C(2, 1) = 2。</p>
<p>答案加上原始区间就是 6。</p>
</li>
</ul>
<p>问题就这样成功容斥解决了！</p>
<p>简单来说就是：<strong>保证左指针变化然后右边随便组合</strong></p>
<pre><code class="language-c++">/*******************************
| Author:  koifish
| Problem: D. Shuffle
| Contest: Educational Codeforces Round 120 (Rated for Div. 2)
| URL:     https://codeforces.com/contest/1622/problem/E
| When:    2021-12-27 22:35:29
| 
| Memory:  256 MB
| Time:    2000 ms
*******************************/
#include &lt;bits/stdc++.h&gt;
#define ll long long
#define int ll
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define vpii vector&lt;pi&gt;
#define il inline
#define ri register
#define all(a) a.begin(), a.end()
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
#define debug puts(&quot;------------------------&quot;)
#define lowbit(x) (x&amp;-x)
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
void Read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
int  read() {int a=0,c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();return a*=b; }
void write(int x) {if(x&gt;9)write(x/10);putchar('0'+x%10);}
void W(int x) {if(x&lt;0){putchar('-'),x=-x;}write(x);}
#define LOCAL
using namespace std;
const int maxn = 5005;
/**/
int n, m, sum[maxn], c[maxn][maxn];
char s[maxn];
/**/
il int calc(int i, int j) {
	return (i &lt; 0 || j &lt; 0 || i &lt; j) ? 0 : c[i][j];
}
signed main()
{
	n = read(); m = read();
	for(int i = 0; i &lt;= n; i++) c[i][0] = 1;
	for(int i = 1; i &lt;= n; i++) {
		for(int j = 1; j &lt;= i; j++) {
			c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;
		}
	}
	scanf(&quot;%s&quot;, s + 1);
	int ans = 1;
	for(int i = 1; i &lt;= n; i++) sum[i] = sum[i - 1] + (s[i] == '1');
	if(sum[n] &lt; m) {
		puts(&quot;1&quot;);
		return 0;
	}
	for(int i = 1, j  = 0; i &lt;= n; i++) {
		while(j &lt;= n &amp;&amp; sum[j] - sum[i - 1] &lt;= m) j++;
		int len = (j-1) - i + 1;
		int k = sum[j - 1] - sum[i - 1] - (s[i] == '0'); 
		ans = (ans + calc(len - 1, k)) % mod;
	}
	cout &lt;&lt; ans &lt;&lt; '\n';
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ccltime103b C 贪心]]></title>
        <id>https://gujinli.github.io/post/ccltime103b-c-tan-xin/</id>
        <link href="https://gujinli.github.io/post/ccltime103b-c-tan-xin/">
        </link>
        <updated>2021-12-27T09:44:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="coptimal-sorting"><a href="https://www.codechef.com/LTIME103B/problems/OPTSORT">C.Optimal Sorting</a><img src="https://www.codechef.com/sites/all/modules/codechef_tags/images/solved.png?v=1" alt="100/100" loading="lazy"></h1>
<blockquote>
<p>选择一段连续区间sort的代价是这段区间的最大值-最小值。求把整个数列sort的最小代价</p>
</blockquote>
<p>一整段区间分开sort更优 当且仅当 后面所有数的最小值 &gt; 当前最大值。即产生了一段<strong>空隙</strong></p>
<p>因为当前最大值如果大于后面所有数的最小值的话，必然要合并在一起sort。</p>
<p>维护后缀最小值从前向后枚举即可。复杂度 O(n)</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
using namespace std;
const int maxn = 200005;
/**/
int t, n, a[maxn], mi[maxn];
/**/
int main()
{
	// fr(&quot;test.in&quot;);
	ios::sync_with_stdio(0);cin.tie(0);
	cin &gt;&gt; t;
	while(t--) {
		cin &gt;&gt; n;
		for(int i = 1; i &lt;= n; i++) {
			cin &gt;&gt; a[i];
		}
		mi[n] = a[n];
		for(int i = n - 1; i &gt;= 1; i--) {
			mi[i] = min(mi[i + 1], a[i]);
		}
		int ans = 0, maxnum = 0, minnum = 0x3f3f3f3f;
		mi[n + 1] = INT_MAX;
		for(int i = 1; i &lt;= n; i++) {
			maxnum = max(maxnum, a[i]);
			minnum = min(minnum, a[i]);
			if(mi[i + 1] &gt; maxnum) {
				ans += maxnum - minnum;
				maxnum = 0;
				minnum = 0x3f3f3f3f;
			}
		}
		cout &lt;&lt; ans &lt;&lt; '\n';
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ccinfi21C 构造]]></title>
        <id>https://gujinli.github.io/post/ccinfi21c-gou-zao/</id>
        <link href="https://gujinli.github.io/post/ccinfi21c-gou-zao/">
        </link>
        <updated>2021-12-27T09:44:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="c-tug-of-war"><a href="https://www.codechef.com/INFI21B/problems/TOW">C. Tug of War</a></h1>
<p><strong>题意：</strong> A队有n人，B队有m人，给定了每个人的能力值ai和bi。A队按照(a1...n)的顺序出场，获胜的人留在场上，输了的人离场，平局都立场。求B队能否获胜，如果能的话，输出字典序最小的排列。</p>
<p><strong>Solution：</strong> 将B队降序排列。令p1表示A当前的人，p2表示B当前的人。用双指针找出B获胜需要的人，将剩余的人升序输出，获胜需要的人降序输出即可。</p>
<p><a href="https://discuss.codechef.com/t/tow-editorial/97247">证明见官方题解：</a></p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
// #define int ll
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define vpii vector&lt;pi&gt;
#define il inline
#define ri register
#define all(a) a.begin(), a.end()
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
using namespace std;
const int maxn = 1000005;
/**/
int n, m, a[maxn], b[maxn];
/**/
il bool cmp(int x, int y) { return x &gt; y;}
il void solve() {
	scanf(&quot;%d%d&quot;, &amp;n, &amp;m);
	for(int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, &amp;a[i]);
	for(int i = 1; i &lt;= m; i++) scanf(&quot;%d&quot;, &amp;b[i]);
	sort(b + 1, b + 1 + m, cmp);
	int p1 = 1, p2 = 1, err = 0;
	while(p1 &lt;= n &amp;&amp; p2 &lt;= m) {
		if(a[p1] &gt; b[p2]) {
			err = 1;
			break;
		}
		else if(a[p1] &lt; b[p2]) { ++p1;
		else  ++p1, ++p2;
	}
	if(p2 &gt; m || err) {printf(&quot;NO\n&quot;); return;}
	printf(&quot;YES\n&quot;);
	for(int i = m; i &gt; p2; i--) cout &lt;&lt; b[i] &lt;&lt; ' ';
	for(int i = 1; i &lt;= p2; i++) cout &lt;&lt; b[i] &lt;&lt; ' ';
	puts(&quot;&quot;);
}
signed main()
{
	int T;
	cin &gt;&gt; T;
	while(T--) {
		solve();
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ccinfi21B 数学/构造]]></title>
        <id>https://gujinli.github.io/post/ccinfi21b-shu-xue-gou-zao/</id>
        <link href="https://gujinli.github.io/post/ccinfi21b-shu-xue-gou-zao/">
        </link>
        <updated>2021-12-27T09:43:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="b-dalgona-treat"><a href="https://www.codechef.com/INFI21B/problems/DALGONA">B. Dalgona Treat</a></h1>
<p><strong>题意：</strong> 求n个平方数相加得到一个完全平方数，数的种类不能超过10</p>
<p><strong>Solution：</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>=</mo><mo>(</mo><mi>n</mi><mo>−</mo><mn>2</mn><msup><mo>)</mo><mn>2</mn></msup><mo>∗</mo><mn>1</mn><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>∗</mo><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">n^2=(n-2)^2*1+2^2*(n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<p>小于3的情况特判直接输出。注意<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">n=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>的时候，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>2</mn><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">n-2=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，同样特判处理</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
using namespace std;
int t;
int n;
int main()
{
	cin &gt;&gt; t;
	while(t--)
	{
		cin &gt;&gt; n;
		if(n == 1) puts(&quot;1\n1 1&quot;);
		else if(n == 2) puts(&quot;2\n3 1\n4 1&quot;);
		else if(n == 4) puts(&quot;1\n1 4&quot;);
		else
		{
			printf(&quot;2\n2 %d\n&quot;, n - 1);
			printf(&quot;%d 1\n&quot;, n - 2);
		}
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[abc232E dp/线性/状态优化]]></title>
        <id>https://gujinli.github.io/post/abc232e-dpxian-xing-zhuang-tai-you-hua/</id>
        <link href="https://gujinli.github.io/post/abc232e-dpxian-xing-zhuang-tai-you-hua/">
        </link>
        <updated>2021-12-27T09:43:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="e-rook-path">E - Rook Path</h1>
<p><strong>题意：</strong> 一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∗</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n*m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>的棋盘。初始点在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(x1,y1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> ， 求通过 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 次移动后到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mn>2</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(x2,y2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>的方案数。</p>
<p>注：每次移动可以 移至当前列/当前行的任意一点。（不能站着不动）</p>
<p><strong>Solution：</strong></p>
<p>首先可以得出简单dp方程：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mn>2</mn></mrow><mrow><mi>j</mi><mn>2</mn><mi mathvariant="normal">≠</mi><mi>j</mi></mrow></munderover><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mn>2</mn></mrow><mrow><mi>i</mi><mn>2</mn><mi mathvariant="normal">≠</mi><mi>i</mi></mrow></munderover><msub><mi>f</mi><mrow><mi>i</mi><mn>2</mn><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">f_{i,j,k} = f_{i,j,k}=\sum_{j2}^{j2\ne j}f_{i,j2,k-1} + \sum_{i2}^{i2\ne i}f_{i2,j,k-1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2969980000000003em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8832210000000005em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.16089em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8832210000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">2</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>简单手模之后我们可以发现一个显然的规律就是，对于一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>只会有四个不同的取值，分别对应：</p>
<blockquote>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">f_{0,0} =(x1, y1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo>)</mo><mspace width="1em"/><mi>x</mi><mi mathvariant="normal">≠</mi><mi>x</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{1,0} =(x, y1) \quad x\ne x1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>)</mo><mspace width="1em"/><mi>y</mi><mi mathvariant="normal">≠</mi><mi>y</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{0,1} =(x1, y) \quad y\ne y1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo><mspace width="1em"/><mi>x</mi><mi mathvariant="normal">≠</mi><mi>x</mi><mn>1</mn><mi mathvariant="normal">且</mi><mi>y</mi><mi mathvariant="normal">≠</mi><mi>y</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{1,1} =(x,y) \quad x\ne x1 且y\ne y1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mord cjk_fallback">且</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span></span></span></span></li>
</ul>
</blockquote>
<p>dp方程也很好推且很好理解。算是一道优化状态的好题。</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define int long long
using namespace std;
inline void read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
/**/
const int mod = 998244353;
int n, m, t;
int x1, Y1, x2, y2;
int v00, v01, v10, v11;
int f[2][2];
/**/
signed main()
{
	cin &gt;&gt; n &gt;&gt; m &gt;&gt; t;
	cin &gt;&gt; x1 &gt;&gt; Y1 &gt;&gt; x2 &gt;&gt; y2;
	f[0][0] = 1;
	while(t--)
	{
		v00 = (f[1][0] * (n - 1) % mod + f[0][1] * (m - 1) % mod) % mod;
		v01 = (f[0][1] * (m - 2) % mod + f[1][1] * (n - 1) % mod + f[0][0]) % mod;
		v10 = (f[1][0] * (n - 2) % mod + f[1][1] * (m - 1) % mod + f[0][0]) % mod;
		v11 = (f[1][1] * (n + m - 4) % mod + f[0][1] + f[1][0]) % mod;
		f[0][0] = v00, f[0][1] = v01, f[1][0] = v10, f[1][1] = v11;
	}
	cin &gt;&gt; x1 &gt;&gt; Y1 &gt;&gt; x2 &gt;&gt; y2;
	if(x1 == x2 &amp;&amp; Y1 == y2) cout &lt;&lt; f[0][0];
	else if(x1 == x2 &amp;&amp; Y1 != y2) cout &lt;&lt; f[0][1];
	else if(x1 != x2 &amp;&amp; Y1 == y2) cout &lt;&lt; f[1][0];
	else cout &lt;&lt; f[1][1];
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cf1620D 构造/1900]]></title>
        <id>https://gujinli.github.io/post/cf1620d-gou-zao-1900/</id>
        <link href="https://gujinli.github.io/post/cf1620d-gou-zao-1900/">
        </link>
        <updated>2021-12-27T09:42:47.000Z</updated>
        <content type="html"><![CDATA[<h1 id="d-exact-change"><a href="https://codeforces.com/contest/1620/problem/D">D - Exact Change</a></h1>
<p><strong>题意：</strong> n个价值为ai的物品。有1、2、3三种硬币，能表示出每个ai的价格最少需要多少枚硬币</p>
<p><strong>Solution：</strong> 首先1和2的个数都不可能超过3个，因为3个的话显然用面额3表示价格更大。因此枚举使用的1和2的数量，再判断3的数量即可。</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
using namespace std;
inline void read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
/**/
const int N = 105;
int t, n, a[N], ans;
/**/
int main()
{
    read(t);
    while(t--)
    {
        read(n);
        for(int i = 1; i &lt;= n; i++) read(a[i]);
        ans = 0x7f7f7f7f;
        for(int one = 0; one &lt;= 2; one++)
        {
            for(int two = 0; two &lt;= 2; two++)
            {
                int three = 0;
                for(int i = 1; i &lt;= n; i++)
                {
                    int minnum = 0x7f7f7f7f;
                    for(int use1 = 0; use1 &lt;= one; use1++)
                    {
                        for(int use2 = 0; use2 &lt;= two; use2++)
                        {
                            int res = a[i] - use1 - use2 * 2;
                            if(res &gt;= 0 &amp;&amp; res % 3 == 0)
                            {
                                minnum = min(minnum, res / 3);
                            }
                        }
                    }
                    three = max(three, minnum);
                }
                ans = min(ans, three + one + two);
            }
        }
        cout &lt;&lt; ans &lt;&lt; '\n';
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>