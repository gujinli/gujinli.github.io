<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gujinli.github.io</id>
    <title>瑾离不是锦鲤的小窝</title>
    <updated>2021-12-28T08:46:32.241Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gujinli.github.io"/>
    <link rel="self" href="https://gujinli.github.io/atom.xml"/>
    <subtitle>ACM打铁/异地恋中——</subtitle>
    <logo>https://gujinli.github.io/images/avatar.png</logo>
    <icon>https://gujinli.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 瑾离不是锦鲤的小窝</rights>
    <entry>
        <title type="html"><![CDATA[cf1622D 组合数/容斥]]></title>
        <id>https://gujinli.github.io/post/cf1622d-zu-he-shu-rong-chi/</id>
        <link href="https://gujinli.github.io/post/cf1622d-zu-he-shu-rong-chi/">
        </link>
        <updated>2021-12-28T08:43:56.000Z</updated>
        <content type="html"><![CDATA[<h1 id="d-shuffle"><a href="https://codeforces.com/contest/1622/problem/D">D - Shuffle</a></h1>
<blockquote>
<p>长度为n的01串，可以选择一段恰好含m个1的子串shuffle（重排），求一共能得到几个不一样的串</p>
</blockquote>
<p>首先这种问题要么dp要么组合数，dp无解于是先n^2傻瓜预处理一个组合数。</p>
<p>考虑以 i 为左端点的最大合法区间，i点只有1和0两种情况</p>
<p>我们采取容斥的思想，计算到 以 i 为左端点时，我们只计算 i 取反的情况。因为 i 相同的情况显然会在 &gt; i 的区间中计算到。</p>
<p>那么有个疑问点，我们只考虑 区间中恰好含 1 数量为 m 的时候会出现一个问题：</p>
<ul>
<li>
<p>例如： 1100 (m==2) 。我们先计算了 i = 1, j = 4。让 i取反为 0， 则后面三位可以填2个1，C(3,2) = 3。</p>
<p>但是 i 为 1 的情况怎么计算呢？我们对于 k(当前1的数量) &lt; m 且 j 已经到达边界的区间同样这样考虑即可。</p>
<p>i = 2, j = 4 时令 第2位取反为0，后面两位填1个1， C(2, 1) = 2。</p>
<p>答案加上原始区间就是 6。</p>
</li>
</ul>
<p>问题就这样成功容斥解决了！</p>
<p>简单来说就是：<strong>保证左指针变化然后右边随便组合</strong></p>
<pre><code class="language-c++">/*******************************
| Author:  koifish
| Problem: D. Shuffle
| Contest: Educational Codeforces Round 120 (Rated for Div. 2)
| URL:     https://codeforces.com/contest/1622/problem/E
| When:    2021-12-27 22:35:29
| 
| Memory:  256 MB
| Time:    2000 ms
*******************************/
#include &lt;bits/stdc++.h&gt;
#define ll long long
#define int ll
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define vpii vector&lt;pi&gt;
#define il inline
#define ri register
#define all(a) a.begin(), a.end()
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
#define debug puts(&quot;------------------------&quot;)
#define lowbit(x) (x&amp;-x)
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
void Read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
int  read() {int a=0,c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();return a*=b; }
void write(int x) {if(x&gt;9)write(x/10);putchar('0'+x%10);}
void W(int x) {if(x&lt;0){putchar('-'),x=-x;}write(x);}
#define LOCAL
using namespace std;
const int maxn = 5005;
/**/
int n, m, sum[maxn], c[maxn][maxn];
char s[maxn];
/**/
il int calc(int i, int j) {
	return (i &lt; 0 || j &lt; 0 || i &lt; j) ? 0 : c[i][j];
}
signed main()
{
	n = read(); m = read();
	for(int i = 0; i &lt;= n; i++) c[i][0] = 1;
	for(int i = 1; i &lt;= n; i++) {
		for(int j = 1; j &lt;= i; j++) {
			c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;
		}
	}
	scanf(&quot;%s&quot;, s + 1);
	int ans = 1;
	for(int i = 1; i &lt;= n; i++) sum[i] = sum[i - 1] + (s[i] == '1');
	if(sum[n] &lt; m) {
		puts(&quot;1&quot;);
		return 0;
	}
	for(int i = 1, j  = 0; i &lt;= n; i++) {
		while(j &lt;= n &amp;&amp; sum[j] - sum[i - 1] &lt;= m) j++;
		int len = (j-1) - i + 1;
		int k = sum[j - 1] - sum[i - 1] - (s[i] == '0'); 
		ans = (ans + calc(len - 1, k)) % mod;
	}
	cout &lt;&lt; ans &lt;&lt; '\n';
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ccltime103b C 贪心]]></title>
        <id>https://gujinli.github.io/post/ccltime103b-c-tan-xin/</id>
        <link href="https://gujinli.github.io/post/ccltime103b-c-tan-xin/">
        </link>
        <updated>2021-12-27T09:44:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="coptimal-sorting"><a href="https://www.codechef.com/LTIME103B/problems/OPTSORT">C.Optimal Sorting</a><img src="https://www.codechef.com/sites/all/modules/codechef_tags/images/solved.png?v=1" alt="100/100" loading="lazy"></h1>
<blockquote>
<p>选择一段连续区间sort的代价是这段区间的最大值-最小值。求把整个数列sort的最小代价</p>
</blockquote>
<p>一整段区间分开sort更优 当且仅当 后面所有数的最小值 &gt; 当前最大值。即产生了一段<strong>空隙</strong></p>
<p>因为当前最大值如果大于后面所有数的最小值的话，必然要合并在一起sort。</p>
<p>维护后缀最小值从前向后枚举即可。复杂度 O(n)</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
using namespace std;
const int maxn = 200005;
/**/
int t, n, a[maxn], mi[maxn];
/**/
int main()
{
	// fr(&quot;test.in&quot;);
	ios::sync_with_stdio(0);cin.tie(0);
	cin &gt;&gt; t;
	while(t--) {
		cin &gt;&gt; n;
		for(int i = 1; i &lt;= n; i++) {
			cin &gt;&gt; a[i];
		}
		mi[n] = a[n];
		for(int i = n - 1; i &gt;= 1; i--) {
			mi[i] = min(mi[i + 1], a[i]);
		}
		int ans = 0, maxnum = 0, minnum = 0x3f3f3f3f;
		mi[n + 1] = INT_MAX;
		for(int i = 1; i &lt;= n; i++) {
			maxnum = max(maxnum, a[i]);
			minnum = min(minnum, a[i]);
			if(mi[i + 1] &gt; maxnum) {
				ans += maxnum - minnum;
				maxnum = 0;
				minnum = 0x3f3f3f3f;
			}
		}
		cout &lt;&lt; ans &lt;&lt; '\n';
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ccinfi21C 构造]]></title>
        <id>https://gujinli.github.io/post/ccinfi21c-gou-zao/</id>
        <link href="https://gujinli.github.io/post/ccinfi21c-gou-zao/">
        </link>
        <updated>2021-12-27T09:44:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="c-tug-of-war"><a href="https://www.codechef.com/INFI21B/problems/TOW">C. Tug of War</a></h1>
<p><strong>题意：</strong> A队有n人，B队有m人，给定了每个人的能力值ai和bi。A队按照(a1...n)的顺序出场，获胜的人留在场上，输了的人离场，平局都立场。求B队能否获胜，如果能的话，输出字典序最小的排列。</p>
<p><strong>Solution：</strong> 将B队降序排列。令p1表示A当前的人，p2表示B当前的人。用双指针找出B获胜需要的人，将剩余的人升序输出，获胜需要的人降序输出即可。</p>
<p><a href="https://discuss.codechef.com/t/tow-editorial/97247">证明见官方题解：</a></p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
// #define int ll
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define vpii vector&lt;pi&gt;
#define il inline
#define ri register
#define all(a) a.begin(), a.end()
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
using namespace std;
const int maxn = 1000005;
/**/
int n, m, a[maxn], b[maxn];
/**/
il bool cmp(int x, int y) { return x &gt; y;}
il void solve() {
	scanf(&quot;%d%d&quot;, &amp;n, &amp;m);
	for(int i = 1; i &lt;= n; i++) scanf(&quot;%d&quot;, &amp;a[i]);
	for(int i = 1; i &lt;= m; i++) scanf(&quot;%d&quot;, &amp;b[i]);
	sort(b + 1, b + 1 + m, cmp);
	int p1 = 1, p2 = 1, err = 0;
	while(p1 &lt;= n &amp;&amp; p2 &lt;= m) {
		if(a[p1] &gt; b[p2]) {
			err = 1;
			break;
		}
		else if(a[p1] &lt; b[p2]) { ++p1;
		else  ++p1, ++p2;
	}
	if(p2 &gt; m || err) {printf(&quot;NO\n&quot;); return;}
	printf(&quot;YES\n&quot;);
	for(int i = m; i &gt; p2; i--) cout &lt;&lt; b[i] &lt;&lt; ' ';
	for(int i = 1; i &lt;= p2; i++) cout &lt;&lt; b[i] &lt;&lt; ' ';
	puts(&quot;&quot;);
}
signed main()
{
	int T;
	cin &gt;&gt; T;
	while(T--) {
		solve();
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ccinfi21B 数学/构造]]></title>
        <id>https://gujinli.github.io/post/ccinfi21b-shu-xue-gou-zao/</id>
        <link href="https://gujinli.github.io/post/ccinfi21b-shu-xue-gou-zao/">
        </link>
        <updated>2021-12-27T09:43:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="b-dalgona-treat"><a href="https://www.codechef.com/INFI21B/problems/DALGONA">B. Dalgona Treat</a></h1>
<p><strong>题意：</strong> 求n个平方数相加得到一个完全平方数，数的种类不能超过10</p>
<p><strong>Solution：</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mo>=</mo><mo>(</mo><mi>n</mi><mo>−</mo><mn>2</mn><msup><mo>)</mo><mn>2</mn></msup><mo>∗</mo><mn>1</mn><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>∗</mo><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">n^2=(n-2)^2*1+2^2*(n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p>
<p>小于3的情况特判直接输出。注意<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">n=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>的时候，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>2</mn><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">n-2=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，同样特判处理</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
using namespace std;
int t;
int n;
int main()
{
	cin &gt;&gt; t;
	while(t--)
	{
		cin &gt;&gt; n;
		if(n == 1) puts(&quot;1\n1 1&quot;);
		else if(n == 2) puts(&quot;2\n3 1\n4 1&quot;);
		else if(n == 4) puts(&quot;1\n1 4&quot;);
		else
		{
			printf(&quot;2\n2 %d\n&quot;, n - 1);
			printf(&quot;%d 1\n&quot;, n - 2);
		}
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[abc232E dp/线性/状态优化]]></title>
        <id>https://gujinli.github.io/post/abc232e-dpxian-xing-zhuang-tai-you-hua/</id>
        <link href="https://gujinli.github.io/post/abc232e-dpxian-xing-zhuang-tai-you-hua/">
        </link>
        <updated>2021-12-27T09:43:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="e-rook-path">E - Rook Path</h1>
<p><strong>题意：</strong> 一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∗</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n*m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>的棋盘。初始点在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(x1,y1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> ， 求通过 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 次移动后到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mn>2</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(x2,y2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>的方案数。</p>
<p>注：每次移动可以 移至当前列/当前行的任意一点。（不能站着不动）</p>
<p><strong>Solution：</strong></p>
<p>首先可以得出简单dp方程：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mn>2</mn></mrow><mrow><mi>j</mi><mn>2</mn><mi mathvariant="normal">≠</mi><mi>j</mi></mrow></munderover><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mn>2</mn></mrow><mrow><mi>i</mi><mn>2</mn><mi mathvariant="normal">≠</mi><mi>i</mi></mrow></munderover><msub><mi>f</mi><mrow><mi>i</mi><mn>2</mn><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">f_{i,j,k} = f_{i,j,k}=\sum_{j2}^{j2\ne j}f_{i,j2,k-1} + \sum_{i2}^{i2\ne i}f_{i2,j,k-1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2969980000000003em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8832210000000005em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.16089em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8832210000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">2</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>简单手模之后我们可以发现一个显然的规律就是，对于一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>只会有四个不同的取值，分别对应：</p>
<blockquote>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">f_{0,0} =(x1, y1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo>)</mo><mspace width="1em"/><mi>x</mi><mi mathvariant="normal">≠</mi><mi>x</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{1,0} =(x, y1) \quad x\ne x1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>)</mo><mspace width="1em"/><mi>y</mi><mi mathvariant="normal">≠</mi><mi>y</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{0,1} =(x1, y) \quad y\ne y1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo>=</mo><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo><mspace width="1em"/><mi>x</mi><mi mathvariant="normal">≠</mi><mi>x</mi><mn>1</mn><mi mathvariant="normal">且</mi><mi>y</mi><mi mathvariant="normal">≠</mi><mi>y</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">f_{1,1} =(x,y) \quad x\ne x1 且y\ne y1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mord cjk_fallback">且</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span></span></span></span></li>
</ul>
</blockquote>
<p>dp方程也很好推且很好理解。算是一道优化状态的好题。</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define int long long
using namespace std;
inline void read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
/**/
const int mod = 998244353;
int n, m, t;
int x1, Y1, x2, y2;
int v00, v01, v10, v11;
int f[2][2];
/**/
signed main()
{
	cin &gt;&gt; n &gt;&gt; m &gt;&gt; t;
	cin &gt;&gt; x1 &gt;&gt; Y1 &gt;&gt; x2 &gt;&gt; y2;
	f[0][0] = 1;
	while(t--)
	{
		v00 = (f[1][0] * (n - 1) % mod + f[0][1] * (m - 1) % mod) % mod;
		v01 = (f[0][1] * (m - 2) % mod + f[1][1] * (n - 1) % mod + f[0][0]) % mod;
		v10 = (f[1][0] * (n - 2) % mod + f[1][1] * (m - 1) % mod + f[0][0]) % mod;
		v11 = (f[1][1] * (n + m - 4) % mod + f[0][1] + f[1][0]) % mod;
		f[0][0] = v00, f[0][1] = v01, f[1][0] = v10, f[1][1] = v11;
	}
	cin &gt;&gt; x1 &gt;&gt; Y1 &gt;&gt; x2 &gt;&gt; y2;
	if(x1 == x2 &amp;&amp; Y1 == y2) cout &lt;&lt; f[0][0];
	else if(x1 == x2 &amp;&amp; Y1 != y2) cout &lt;&lt; f[0][1];
	else if(x1 != x2 &amp;&amp; Y1 == y2) cout &lt;&lt; f[1][0];
	else cout &lt;&lt; f[1][1];
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cf1620D 构造/1900]]></title>
        <id>https://gujinli.github.io/post/cf1620d-gou-zao-1900/</id>
        <link href="https://gujinli.github.io/post/cf1620d-gou-zao-1900/">
        </link>
        <updated>2021-12-27T09:42:47.000Z</updated>
        <content type="html"><![CDATA[<h1 id="d-exact-change"><a href="https://codeforces.com/contest/1620/problem/D">D - Exact Change</a></h1>
<p><strong>题意：</strong> n个价值为ai的物品。有1、2、3三种硬币，能表示出每个ai的价格最少需要多少枚硬币</p>
<p><strong>Solution：</strong> 首先1和2的个数都不可能超过3个，因为3个的话显然用面额3表示价格更大。因此枚举使用的1和2的数量，再判断3的数量即可。</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
using namespace std;
inline void read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
/**/
const int N = 105;
int t, n, a[N], ans;
/**/
int main()
{
    read(t);
    while(t--)
    {
        read(n);
        for(int i = 1; i &lt;= n; i++) read(a[i]);
        ans = 0x7f7f7f7f;
        for(int one = 0; one &lt;= 2; one++)
        {
            for(int two = 0; two &lt;= 2; two++)
            {
                int three = 0;
                for(int i = 1; i &lt;= n; i++)
                {
                    int minnum = 0x7f7f7f7f;
                    for(int use1 = 0; use1 &lt;= one; use1++)
                    {
                        for(int use2 = 0; use2 &lt;= two; use2++)
                        {
                            int res = a[i] - use1 - use2 * 2;
                            if(res &gt;= 0 &amp;&amp; res % 3 == 0)
                            {
                                minnum = min(minnum, res / 3);
                            }
                        }
                    }
                    three = max(three, minnum);
                }
                ans = min(ans, three + one + two);
            }
        }
        cout &lt;&lt; ans &lt;&lt; '\n';
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cf1619F 构造/2000]]></title>
        <id>https://gujinli.github.io/post/cf1619f-gou-zao-2000/</id>
        <link href="https://gujinli.github.io/post/cf1619f-gou-zao-2000/">
        </link>
        <updated>2021-12-27T09:40:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="f-lets-play-the-hat"><a href="https://codeforces.com/contest/1619/problem/F">F - Let's Play the Hat?</a></h1>
<p><strong>题意：</strong> n个人m张桌子玩k次游戏。每个人必须玩k次游戏。每个桌子的人数都是 n/m （上取整 或 下取整）。</p>
<p>定义 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个人在人数为 n/m(上取整) 的桌子上玩的游戏次数。对任意 $ i, j $ 满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>b</mi><mi>i</mi></msub><mo>−</mo><msub><mi>b</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">|b_i - b_j| &lt;= 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p><strong>Solution：</strong> 首先，m张桌子分给n个人，显然每张桌子的人数是确定的——</p>
<p>大桌为n%m个，小桌为 m - n%m个。（每张桌子先坐 n/m（下取整）个人，剩下的 n%m 个人随便挑一个坐）</p>
<p>我们要使每个人在大桌上坐的次数相差不超过1。策略是这样的：</p>
<p>每次让坐在大桌上次数较少的人坐大桌，坐不满从较多的人补。这样显然可以保证相差不超过1。</p>
<p>实现的话可以考虑利用vector的rotate来滚动选择的人，每次坐大桌的人都让其移动到整个序列的最后排队。</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
using namespace std;
inline void read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
const int N = 2e5 + 5;
int t, n, m, k;
int main()
{
    read(t);
    while(t--)
    {
        read(n); read(m); read(k);
        vector&lt;int&gt;v(n);
        for(int i = 0; i &lt; n; i++) v[i] = i + 1;
        int bt = n % m, bn = ceil(1.0 * n / m), sn = n / m;
        for(int i = 1; i &lt;= k; i++)
        {
            int pos = 0;
            for(int j = 1, num; j &lt;= m; j++)
            {
                if(j &lt;= bt) num = bn; else num = sn;
                cout &lt;&lt; num &lt;&lt; ' ';
                while(num--) cout &lt;&lt; v[pos++] &lt;&lt; ' ';
                puts(&quot;&quot;);
            }
            rotate(v.begin(), v.begin() + bn * bt, v.end());
        }
        puts(&quot;&quot;);
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cf1619D 鸽巢原理/贪心/1800]]></title>
        <id>https://gujinli.github.io/post/cf1619d-ge-chao-yuan-li-tan-xin-1800/</id>
        <link href="https://gujinli.github.io/post/cf1619d-ge-chao-yuan-li-tan-xin-1800/">
        </link>
        <updated>2021-12-27T09:40:05.000Z</updated>
        <content type="html"><![CDATA[<h1 id="d-new-years-problem"><a href="https://codeforces.com/contest/1619/problem/D">D - New Year's Problem</a></h1>
<p><strong>题意：</strong></p>
<p>n个人。m个商店。</p>
<p>每个商店有对应n个人的n个礼物，每个礼物有一个满意度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> ，选择 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个商店使得：所有人能/获得的最大满意度的最小值最大。</p>
<p><strong>Solution：</strong></p>
<p>定义<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>i</mi><mi>e</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">lie[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 表示第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个人的最大满意度。</p>
<p>显然，n个人选择n个商店的话，只需要把n个人最大满意度所在的商店选择即可。</p>
<p>根据鸽巢原理，n个人选择n-1的话，必然有两列的最优值在同一行。</p>
<p>我们枚举商店，选择一个商店记录其最大和次大，除去这两个人后，剩下的全部选择最大值即可。</p>
<p>复杂度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mi>m</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
using namespace std;
inline void read(int &amp;a) {a=0;int c=getchar(),b=1; while(c&gt;'9'||c&lt;'0') {if(c=='-')b=-1;c=getchar();} while(c&gt;='0'&amp;&amp;c&lt;='9') a=(a&lt;&lt;3)+(a&lt;&lt;1)+c-48,c=getchar();a*=b; }
const int N = 1e5 + 5;
int t, n, m, ans, lie[N], pos1, pos2;
int main()
{
    read(t);
    while(t--)
    {
        read(m); read(n); ans = 0;
        vector&lt;int&gt;v[m+2];
        for(int i = 1; i &lt;= m; i++)
        {
            v[i].push_back(0);
            for(int j = 1, x; j &lt;= n; j++)
            {
                lie[j] = 0;
                read(x);
                v[i].push_back(x);
            }
        }
        for(int i = 1; i &lt;= n; i++)
        {
            for(int j = 1; j &lt;= m; j++)
            {
                lie[i] = max(lie[i], v[j][i]);
            }
        }
        for(int i = 1; i &lt;= m; i++)
        {
            pos1 = pos2 = 0;
            for(int j = 1; j &lt;= n; j++)
            {
                if(v[i][j] &gt; v[i][pos1]) pos2 = pos1, pos1 = j;
                else if(v[i][j] &gt; v[i][pos2]) pos2 = j;
            }
            int maxnum = min(v[i][pos1], v[i][pos2]);
            for(int j = 1; j &lt;= n; j++)
            {
                if(j == pos1 || j == pos2) continue;
                maxnum = min(maxnum, lie[j]);
            }
            ans = max(ans, maxnum);
        }
        cout &lt;&lt; ans &lt;&lt; '\n';
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cf1615E 博弈/构造/树/2400]]></title>
        <id>https://gujinli.github.io/post/cf1615e-bo-yi-gou-zao-shu-2400/</id>
        <link href="https://gujinli.github.io/post/cf1615e-bo-yi-gou-zao-shu-2400/">
        </link>
        <updated>2021-12-27T09:38:58.000Z</updated>
        <content type="html"><![CDATA[<h1 id="e-purple-crayon"><a href="https://codeforces.com/contest/1615/problem/E">E - Purple Crayon</a></h1>
<blockquote>
<p>一个初始全部为空白节点的树。红（<strong>先手</strong>）蓝两方轮流对其染色：（注：以下操作可以进行任意次）</p>
<ul>
<li>红：选择一个空白子树将其全部染为红色。（注：一回合染色的节点数不能超过k）</li>
<li>蓝：选择任意个空白子树将其全部染为蓝色。（染色数无限制）</li>
</ul>
<p>定义val = w(r-b) ，w：空白节点，r：红色，b：蓝色。</p>
<p>红方想让val最大化，蓝方想让b最小化。求双方均采取最优策略的情况下的val。</p>
</blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mo>=</mo><mo>(</mo><mi>n</mi><mo>−</mo><mi>r</mi><mo>−</mo><mi>b</mi><mo>)</mo><mo>(</mo><mi>r</mi><mo>−</mo><mi>b</mi><mo>)</mo><mo>=</mo><mi>r</mi><mo>(</mo><mi>n</mi><mo>−</mo><mi>r</mi><mo>)</mo><mo>−</mo><mi>b</mi><mo>(</mo><mi>n</mi><mo>−</mo><mi>b</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">val = (n-r-b)(r-b) = r(n-r)-b(n-b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></p>
<p>首先对于蓝方来说，只需要最大化<strong>b(n-b)</strong> ，即选尽可能多的节点。</p>
<p>红方先选：</p>
<ul>
<li>
<p>k &gt;= 叶 把所有叶节点全选了使得b=0。此时 val = r(n-r)。显然r接近2/n时最小。即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo>(</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo>(</mo><mn>2</mn><mi mathvariant="normal">/</mi><mi>n</mi><mo separator="true">,</mo><mi>k</mi><mo>)</mo><mo separator="true">,</mo><mi mathvariant="normal">叶</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">r = max(min(2/n, k),叶)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">2</span><span class="mord">/</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">叶</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>k &lt; 叶 即此时红方没有办法保证蓝方无点可选，显然选择一个叶节点后可以叶 -&gt; 根上的所有路径全部被染色。因此问题变成了求选k个点尽可能多的染色。根据官方题解的做法，我们可以先求出每个点的深度，降序排序后dfs。到达根或一个已染色的节点后返回这条链的长度。将链长降序排序后选择最大的k个即可。</p>
<p>之后剩下的就只能由蓝方任意选择了，如果剩下的所有点&lt;=2/n则全选，如果 &gt; 2/n ，则只需选 2/n个即可。因为b = 2/n时使得结果最小化，且r再选只会使结果更小。（因为已经是负值了）</p>
</li>
</ul>
<blockquote>
<p>关于求这样的链长除了染色以外，从dmyls那里学习的另一种做法如下：</p>
<p>mx[u] 表示 u 到最底端的链长。每次遍历到u时，将所有的mx[v]存进一个vector中，最大的作为u的链继续向上延伸，其余的加入最后统计的链长里即可。</p>
<p>非常妙www，虽然会因为排序操作使时间复杂度变大，但毫无影响。</p>
</blockquote>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define mod 998244353
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
using namespace std;
const int maxn = 200005;
/**/
int n, k, mx[maxn], r, b;
vi eg[maxn];
vi cur;
/**/
void dfs(int u, int fa)
{
	if(eg[u].size() == 1 &amp;&amp; fa) {
		mx[u] = 1;
		return;
	}
	vi cr;
	for(auto v : eg[u]) {
		if(v == fa) continue;
		dfs(v, u);
		cr.pb(mx[v]);
	}
	sort(cr.begin(), cr.end());
	mx[u] = cr[cr.size() - 1] + 1;
	for(int i = 0; i &lt; cr.size() - 1; i++) cur.pb(cr[i]);
}
int main()
{
	// freopen(&quot;test.in&quot;, &quot;r&quot;, stdin);
	cin &gt;&gt; n &gt;&gt; k;
	for(int i = 1; i &lt; n; i++) {
		int u, v;
		scanf(&quot;%d%d&quot;, &amp;u, &amp;v);
		eg[u].pb(v), eg[v].pb(u);
	}
	// puts(&quot;ok1&quot;);
	dfs(1, 0);
	cur.pb(mx[1]);
	sort(cur.begin(), cur.end());
	reverse(cur.begin(), cur.end());
	if(k &gt; cur.size()) {
		b = 0;
		r = min(k, n / 2);
		if(r &lt; cur.size()) r = cur.size();
	}
	else {
		r = k;
		b = n;
		for(int i = 0; i &lt; k; i++) b -= cur[i];
		if(b &gt; n / 2) b = n / 2;
	}
	ll ans = 1ll * (n - r - b) * (r - b);
	cout &lt;&lt; ans &lt;&lt; '\n';
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cf1615D 树/异或/2200]]></title>
        <id>https://gujinli.github.io/post/cf1615d-shu-yi-huo-2200/</id>
        <link href="https://gujinli.github.io/post/cf1615d-shu-yi-huo-2200/">
        </link>
        <updated>2021-12-27T09:38:40.000Z</updated>
        <content type="html"><![CDATA[<h1 id="d-xor-mas-tree"><a href="https://codeforces.com/contest/1615/problem/D">D - X(or)-mas Tree</a></h1>
<blockquote>
<p>给定一个树，边权为-1表示未知。给定m个节点间路径异或和二进制1个数的奇偶性，判断能否构造一个合法的树满足条件</p>
</blockquote>
<ul>
<li>一个性质：设两个数为x,y。二进制下x有a个1，y有b个1。则：
<ul>
<li>a ^ b = num_1(x ^ y) % 2</li>
</ul>
</li>
</ul>
<p>所以对于每个边权，我们只需要考虑其1的个数的奇偶性。把m条边加上后一起遍历判断，不确定的边利用异或的性质输出边权即可</p>
<p>注意这里用了内置的位运算函数，简单介绍一下</p>
<p>__builtin_ffs (unsigned int x)返回x的最后一位1的是从后向前第几位，比如7368（1110011001000）返回4</p>
<p>__builtin_clz (unsigned int x)返回前导的0的个数。</p>
<p>__builtin_ctz (unsigned int x) 返回后面的0个个数，和; builtin_clz相对。</p>
<p>__ builtin_popcount (unsigned int x) 返回二进制表示中1的个数。</p>
<p>__builtin_parity (unsigned int x) 返回x的奇偶校验位，也就是x的1的个数模2的结果。</p>
<pre><code class="language-c++">#include &lt;bits/stdc++.h&gt;
#define ll long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define vi vector&lt;int&gt;
#define pi pair&lt;int, int&gt;
#define fr(a) freopen(a, &quot;r&quot;, stdin)
#define fo(a) freopen(a, &quot;w&quot;, stdout);
#define mod 998244353
template&lt;typename T&gt; bool chkmin(T &amp;a, T b){return (b &lt; a) ? a = b, 1 : 0;}
template&lt;typename T&gt; bool chkmax(T &amp;a, T b){return (b &gt; a) ? a = b, 1 : 0;}
ll ksm(ll a, ll b) {if (b == 0) return 1; ll ns = ksm(a, b &gt;&gt; 1); ns = ns * ns % mod; if (b &amp; 1) ns = ns * a % mod; return ns;}
using namespace std;
const int maxn = 200005;
/**/
int t, n, m, err;
int dis[maxn], vis[maxn];
vector&lt;pi&gt;g[maxn];
/**/
void dfs(int u) {
	if(err) return;
	for(auto i:g[u]) {
		int v = i.fi, w = i.se;
		if(dis[v] == -1) {
			dis[v] = dis[u] ^ w;
			dfs(v);
		}
		else if(dis[v] != (dis[u] ^ w)) {
			err = 1;
			return;
		}
	}
}
void solve() {
	err = 0;
	vector&lt; array&lt;int, 3&gt; &gt;ed;
	cin &gt;&gt; n &gt;&gt; m;
	for(int i = 1; i &lt;= n; i++) {
		g[i].clear();
		dis[i] = -1;
	}
	for(int i = 1; i &lt; n; i++) {
		int u, v, w;
		cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;
		ed.pb({u, v, w});
		if(w == -1) continue;
		w = __builtin_parity(w);
		g[u].pb({v, w});
		g[v].pb({u, w});
	}
	for(int i = 1; i &lt;= m; i++) {
		int u, v, w;
		cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;
		g[u].pb({v, w});
		g[v].pb({u, w});
	}
	for(int i = 1; i &lt;= n; i++) {
		if(dis[i] == -1) dis[i] = 0, dfs(i);
	}
	if(err) {puts(&quot;NO&quot;); return;}
	puts(&quot;YES&quot;);
	for(auto i: ed) {
		int u = i[0], v = i[1], w = i[2];
		if(w == -1) w = dis[u] ^ dis[v];
		printf(&quot;%d %d %d\n&quot;, u, v, w);
	}
}
int main()
{
	// fr(&quot;test.in&quot;);
	// fo(&quot;test.out&quot;);
	ios::sync_with_stdio(0);cin.tie(0);
	int T;
	cin &gt;&gt; T;
	while(T--) {
		solve();
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>